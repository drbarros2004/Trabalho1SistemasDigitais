library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.numeric_std.all;

-- Esse módulo chama a ULA e o contador. Esse módulo controla todo o funcionamento do trabalho na placa.
-- Para realizar os testes no simulador do ISE, esse módulo não foi necessário.

entity main is 
	port(
		selecao: in std_logic_vector (2 downto 0);
		clk: in std_logic; 
		reset: in std_logic;
		Q: out std_logic_vector (3 downto 0);
		flag_bitDeSinal : out std_logic;
		flag_overflow : out std_logic;
		flag_zero : out std_logic;
		flag_negativo : out std_logic);
		
	
end main;

architecture hardware of main is
	component ula
Port ( A : in  STD_LOGIC_VECTOR(3 downto 0);
       B : in  STD_LOGIC_VECTOR(3 downto 0);
	   seletor : in  STD_LOGIC_VECTOR (2 downto 0);
       S : out  STD_LOGIC_VECTOR (3 downto 0);
	   bit_sinal: out STD_LOGIC;
	   ovf: out STD_LOGIC;
	   zero: out STD_LOGIC;
	   negativo: out STD_LOGIC);
	end component;
	
	component contador
		port(
			clk: in std_logic; -- Clock
			reset: in std_logic; -- Reset Assíncrono
			contadorAB: out unsigned (7 downto 0) := "00000000" 
		);
	end component;

	signal A,B: std_logic_vector (3 downto 0);
	signal AB: unsigned (7 downto 0);

begin
	ula_process: ula PORT MAP (A, B, selecao, Q, flag_bitdesinal, flag_overflow, flag_zero, flag_negativo);
	conta: contador PORT MAP(clk, reset, AB);
	
	A <= std_logic_vector(AB(3 downto 0));
	B <= std_logic_vector(AB(7 downto 4));
	

end hardware;
